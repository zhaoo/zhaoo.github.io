{"title":"Hexo - 自动部署博客","slug":"hexo-webhook","date":"2021-08-29T12:18:59.000Z","updated":"2021-08-29T12:56:57.679Z","comments":true,"path":"api/articles/hexo-webhook.json","realPath":"/2021/08/29/hexo-webhook/","excerpt":"基于 GitHub-Webhooks 自动拉取并部署博客。","covers":["https://pic.izhaoo.com/20210829204722.jpg","https://pic.izhaoo.com/20210829204907.jpg","https://pic.izhaoo.com/20210829205136.jpg","https://pic.izhaoo.com/20210829205527.jpg"],"cover":"https://pic.izhaoo.com/20210628213000.jpg","content":"<p>基于 GitHub-Webhooks 自动拉取并部署博客。</p>\n<span id=\"more\"></span>\n\n<p>兆兆博客部署在宝塔面板上，每次部署时都要登录面板、上传文件，贼麻烦。燃鹅每次都忍了…终于有一天，忍无可忍了！</p>\n<p>比较方便的方式可以通过 GitHub-Webhooks 设置钩子，在向 GitHub 远程仓库提交代码时，使用 webhook 向服务器发送请求，自动拉取代码更新博客。</p>\n<p>在服务器的 <code>webroot</code> 目录下新建两个文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// webhook.js</span><br><br><span class=\"hljs-keyword\">const</span> http = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;http&#x27;</span>);<br><span class=\"hljs-keyword\">const</span> util = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;util&#x27;</span>);<br><span class=\"hljs-keyword\">const</span> child_process = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;child_process&#x27;</span>);<br><br><span class=\"hljs-keyword\">const</span> exec = util.promisify(child_process.exec);<br><span class=\"hljs-keyword\">const</span> port = <span class=\"hljs-number\">3000</span>;  <span class=\"hljs-comment\">//配置端口</span><br><span class=\"hljs-keyword\">const</span> host = <span class=\"hljs-string\">&#x27;localhost&#x27;</span>;  <span class=\"hljs-comment\">//配置域名</span><br><span class=\"hljs-keyword\">const</span> matchUrl = <span class=\"hljs-string\">&#x27;/webhook&#x27;</span>;  <span class=\"hljs-comment\">//配置路由</span><br><br><span class=\"hljs-keyword\">const</span> server = http<br>  .createServer(<span class=\"hljs-keyword\">async</span> (request, response) =&gt; &#123;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      <span class=\"hljs-keyword\">const</span> url = request.url;<br>      <span class=\"hljs-keyword\">if</span> (url === matchUrl) &#123;<br>        <span class=\"hljs-keyword\">await</span> exec(<span class=\"hljs-string\">&#x27;sh webhook.sh&#x27;</span>);  <span class=\"hljs-comment\">//执行当前目录下的脚本</span><br>        response.write(<span class=\"hljs-string\">&#x27;Hexo webhook executed successfully&#x27;</span>);<br>        response.end();<br>      &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>        response.write(<span class=\"hljs-string\">`Hexo webhook running at: http://<span class=\"hljs-subst\">$&#123;host&#125;</span>:<span class=\"hljs-subst\">$&#123;port&#125;</span><span class=\"hljs-subst\">$&#123;matchUrl&#125;</span>`</span>);<br>        response.end();<br>      &#125;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;<br>      <span class=\"hljs-built_in\">console</span>.error(e);<br>    &#125;<br>  &#125;)<br>  .listen(port, host, <span class=\"hljs-function\">() =&gt;</span> &#123;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`Hexo webhook running at: http://<span class=\"hljs-subst\">$&#123;host&#125;</span>:<span class=\"hljs-subst\">$&#123;port&#125;</span><span class=\"hljs-subst\">$&#123;matchUrl&#125;</span>`</span>);<br>  &#125;);<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-comment\"># webhook.sh</span><br><span class=\"hljs-comment\">#!/usr/bin/env bash</span><br><br>rm -rf ~/www/wwwroot/zhaoo/*<br><span class=\"hljs-built_in\">cd</span> ~/www/wwwroot/zhaoo/<br>git pull https://github.com/zhaoo/zhaoo.github.io.git<br></code></pre></td></tr></table></figure>\n\n<p>在宝塔面板的软件商店中安装 <em>PM2管理器</em>，运行 JavaScript 脚本：</p>\n<p><img  src=\"https://pic.izhaoo.com/20210829204722.jpg\"  ><span class=\"image-caption\">配置 PM2</span></p>\n<p>现在脚本是运行在 <code>http://localhost:3000</code> 下，外网无法访问，使用我们需要配置一个反向代理：</p>\n<p><img  src=\"https://pic.izhaoo.com/20210829204907.jpg\"  ><span class=\"image-caption\">配置反向代理</span></p>\n<p>默认是整个域名进行转发，会导致博客无法访问，所以需要修改下 Nginx 配置，只转发 <code>/webhook</code> 路由。</p>\n<p><img  src=\"https://pic.izhaoo.com/20210829205136.jpg\"  ><span class=\"image-caption\">配置 Nginx</span></p>\n<p>现在访问一下 <code>https://www.izhaoo.com/webhook/</code>，successfully！现在只需访问一次该 URL，服务器便会自动从 GitHub 拉取代码并更新博客。</p>\n<p>最后只需要在 GitHub 配置一下 Webhooks 即可，向 GitHub 推代码时会自动向服务器发送请求。</p>\n<p><img  src=\"https://pic.izhaoo.com/20210829205527.jpg\"  ><span class=\"image-caption\">配置 Webhooks</span></p>\n","more":"<p>兆兆博客部署在宝塔面板上，每次部署时都要登录面板、上传文件，贼麻烦。燃鹅每次都忍了…终于有一天，忍无可忍了！</p>\n<p>比较方便的方式可以通过 GitHub-Webhooks 设置钩子，在向 GitHub 远程仓库提交代码时，使用 webhook 向服务器发送请求，自动拉取代码更新博客。</p>\n<p>在服务器的 <code>webroot</code> 目录下新建两个文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// webhook.js</span><br><br><span class=\"hljs-keyword\">const</span> http = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;http&#x27;</span>);<br><span class=\"hljs-keyword\">const</span> util = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;util&#x27;</span>);<br><span class=\"hljs-keyword\">const</span> child_process = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;child_process&#x27;</span>);<br><br><span class=\"hljs-keyword\">const</span> exec = util.promisify(child_process.exec);<br><span class=\"hljs-keyword\">const</span> port = <span class=\"hljs-number\">3000</span>;  <span class=\"hljs-comment\">//配置端口</span><br><span class=\"hljs-keyword\">const</span> host = <span class=\"hljs-string\">&#x27;localhost&#x27;</span>;  <span class=\"hljs-comment\">//配置域名</span><br><span class=\"hljs-keyword\">const</span> matchUrl = <span class=\"hljs-string\">&#x27;/webhook&#x27;</span>;  <span class=\"hljs-comment\">//配置路由</span><br><br><span class=\"hljs-keyword\">const</span> server = http<br>  .createServer(<span class=\"hljs-keyword\">async</span> (request, response) =&gt; &#123;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      <span class=\"hljs-keyword\">const</span> url = request.url;<br>      <span class=\"hljs-keyword\">if</span> (url === matchUrl) &#123;<br>        <span class=\"hljs-keyword\">await</span> exec(<span class=\"hljs-string\">&#x27;sh webhook.sh&#x27;</span>);  <span class=\"hljs-comment\">//执行当前目录下的脚本</span><br>        response.write(<span class=\"hljs-string\">&#x27;Hexo webhook executed successfully&#x27;</span>);<br>        response.end();<br>      &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>        response.write(<span class=\"hljs-string\">`Hexo webhook running at: http://<span class=\"hljs-subst\">$&#123;host&#125;</span>:<span class=\"hljs-subst\">$&#123;port&#125;</span><span class=\"hljs-subst\">$&#123;matchUrl&#125;</span>`</span>);<br>        response.end();<br>      &#125;<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;<br>      <span class=\"hljs-built_in\">console</span>.error(e);<br>    &#125;<br>  &#125;)<br>  .listen(port, host, <span class=\"hljs-function\">() =&gt;</span> &#123;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`Hexo webhook running at: http://<span class=\"hljs-subst\">$&#123;host&#125;</span>:<span class=\"hljs-subst\">$&#123;port&#125;</span><span class=\"hljs-subst\">$&#123;matchUrl&#125;</span>`</span>);<br>  &#125;);<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-comment\"># webhook.sh</span><br><span class=\"hljs-comment\">#!/usr/bin/env bash</span><br><br>rm -rf ~/www/wwwroot/zhaoo/*<br><span class=\"hljs-built_in\">cd</span> ~/www/wwwroot/zhaoo/<br>git pull https://github.com/zhaoo/zhaoo.github.io.git<br></code></pre></td></tr></table></figure>\n\n<p>在宝塔面板的软件商店中安装 <em>PM2管理器</em>，运行 JavaScript 脚本：</p>\n<p><img  src=\"https://pic.izhaoo.com/20210829204722.jpg\"  ><span class=\"image-caption\">配置 PM2</span></p>\n<p>现在脚本是运行在 <code>http://localhost:3000</code> 下，外网无法访问，使用我们需要配置一个反向代理：</p>\n<p><img  src=\"https://pic.izhaoo.com/20210829204907.jpg\"  ><span class=\"image-caption\">配置反向代理</span></p>\n<p>默认是整个域名进行转发，会导致博客无法访问，所以需要修改下 Nginx 配置，只转发 <code>/webhook</code> 路由。</p>\n<p><img  src=\"https://pic.izhaoo.com/20210829205136.jpg\"  ><span class=\"image-caption\">配置 Nginx</span></p>\n<p>现在访问一下 <code>https://www.izhaoo.com/webhook/</code>，successfully！现在只需访问一次该 URL，服务器便会自动从 GitHub 拉取代码并更新博客。</p>\n<p>最后只需要在 GitHub 配置一下 Webhooks 即可，向 GitHub 推代码时会自动向服务器发送请求。</p>\n<p><img  src=\"https://pic.izhaoo.com/20210829205527.jpg\"  ><span class=\"image-caption\">配置 Webhooks</span></p>","categories":[{"name":"前端","path":"api/categories/前端.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"前端","path":"api/tags/前端.json"}]}