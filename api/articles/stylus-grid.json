{"title":"Stylus - 实现栅格化","slug":"stylus-grid","date":"2019-12-20T08:52:45.000Z","updated":"2020-11-16T08:14:53.000Z","comments":true,"path":"api/articles/stylus-grid.json","realPath":"/2019/12/20/stylus-grid/","excerpt":"使用CSS预处理工具Stylus实现类似BootStrap中的栅格化功能。","covers":null,"cover":"https://pic.izhaoo.com/20200305030513.jpg","content":"<p>使用CSS预处理工具<code>Stylus</code>实现类似<code>BootStrap</code>中的栅格化功能。</p>\n<span id=\"more\"></span>\n\n<p>最近在开发一个博客主题，需要实现栅格化。</p>\n<p>首先想到的就是<code>BootStrap</code>，二话不说引了进来，等等……</p>\n<p>我的初衷是倾尽全力设计一个简洁的博客主题，代码也必须简洁，所以就仿照<code>BootStrap</code>，用<code>Stylus</code>实现了栅格化功能。</p>\n<p>几行代码，取代了长篇大论的<code>BootStrap</code>。</p>\n<p>食用方法同<code>BootStrap</code>。</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-comment\">// Grid</span><br><span class=\"hljs-selector-class\">.row</span><br>  <span class=\"hljs-attribute\">display</span> -ms-flexbox<br>  <span class=\"hljs-attribute\">display</span> flex<br>  -ms-<span class=\"hljs-attribute\">flex-wrap</span> wrap<br>  <span class=\"hljs-attribute\">flex-wrap</span> wrap<br><span class=\"hljs-keyword\">for</span> <span class=\"hljs-variable\">$i</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">1</span> .. <span class=\"hljs-number\">12</span><br>  .col-&#123;<span class=\"hljs-variable\">$i</span>&#125;, .col-md-&#123;<span class=\"hljs-variable\">$i</span>&#125;, .col-lg-&#123;<span class=\"hljs-variable\">$i</span>&#125;<br>    <span class=\"hljs-attribute\">position</span> relative<br>    <span class=\"hljs-attribute\">width</span> <span class=\"hljs-number\">100%</span><br>    <span class=\"hljs-attribute\">padding-right</span> <span class=\"hljs-number\">15px</span><br>    <span class=\"hljs-attribute\">padding-left</span> <span class=\"hljs-number\">15px</span><br>    <span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">576px</span>)<br>      padding-right <span class=\"hljs-number\">0</span><br>      padding-left <span class=\"hljs-number\">0</span><br>col-attr()<br>  -ms-flex <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> arguments<br>  flex <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> arguments<br>  <span class=\"hljs-attribute\">max-width</span> arguments<br>for $i in <span class=\"hljs-number\">1</span> .. <span class=\"hljs-number\">12</span><br>  .col-&#123;<span class=\"hljs-variable\">$i</span>&#125;<br>    col-attr round((<span class=\"hljs-variable\">$i</span> * <span class=\"hljs-number\">100</span> / <span class=\"hljs-number\">12</span>) %, <span class=\"hljs-number\">6</span>)<br><span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">576px</span>)<br>  for $i in <span class=\"hljs-number\">1</span> .. <span class=\"hljs-number\">12</span><br>    .col-sm-&#123;<span class=\"hljs-variable\">$i</span>&#125;<br>      col-attr round((<span class=\"hljs-variable\">$i</span> * <span class=\"hljs-number\">100</span> / <span class=\"hljs-number\">12</span>) %, <span class=\"hljs-number\">6</span>)<br><span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">768px</span>)<br>  for $i in <span class=\"hljs-number\">1</span> .. <span class=\"hljs-number\">12</span><br>    .col-md-&#123;<span class=\"hljs-variable\">$i</span>&#125;<br>      col-attr round((<span class=\"hljs-variable\">$i</span> * <span class=\"hljs-number\">100</span> / <span class=\"hljs-number\">12</span>) %, <span class=\"hljs-number\">6</span>)<br><span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">992px</span>)<br>  for $i in <span class=\"hljs-number\">1</span> .. <span class=\"hljs-number\">12</span><br>    .col-lg-&#123;<span class=\"hljs-variable\">$i</span>&#125;<br>      col-attr round((<span class=\"hljs-variable\">$i</span> * <span class=\"hljs-number\">100</span> / <span class=\"hljs-number\">12</span>) %, <span class=\"hljs-number\">6</span>)<br></code></pre></td></tr></table></figure>\n","more":"<p>最近在开发一个博客主题，需要实现栅格化。</p>\n<p>首先想到的就是<code>BootStrap</code>，二话不说引了进来，等等……</p>\n<p>我的初衷是倾尽全力设计一个简洁的博客主题，代码也必须简洁，所以就仿照<code>BootStrap</code>，用<code>Stylus</code>实现了栅格化功能。</p>\n<p>几行代码，取代了长篇大论的<code>BootStrap</code>。</p>\n<p>食用方法同<code>BootStrap</code>。</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-comment\">// Grid</span><br><span class=\"hljs-selector-class\">.row</span><br>  <span class=\"hljs-attribute\">display</span> -ms-flexbox<br>  <span class=\"hljs-attribute\">display</span> flex<br>  -ms-<span class=\"hljs-attribute\">flex-wrap</span> wrap<br>  <span class=\"hljs-attribute\">flex-wrap</span> wrap<br><span class=\"hljs-keyword\">for</span> <span class=\"hljs-variable\">$i</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">1</span> .. <span class=\"hljs-number\">12</span><br>  .col-&#123;<span class=\"hljs-variable\">$i</span>&#125;, .col-md-&#123;<span class=\"hljs-variable\">$i</span>&#125;, .col-lg-&#123;<span class=\"hljs-variable\">$i</span>&#125;<br>    <span class=\"hljs-attribute\">position</span> relative<br>    <span class=\"hljs-attribute\">width</span> <span class=\"hljs-number\">100%</span><br>    <span class=\"hljs-attribute\">padding-right</span> <span class=\"hljs-number\">15px</span><br>    <span class=\"hljs-attribute\">padding-left</span> <span class=\"hljs-number\">15px</span><br>    <span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">576px</span>)<br>      padding-right <span class=\"hljs-number\">0</span><br>      padding-left <span class=\"hljs-number\">0</span><br>col-attr()<br>  -ms-flex <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> arguments<br>  flex <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> arguments<br>  <span class=\"hljs-attribute\">max-width</span> arguments<br>for $i in <span class=\"hljs-number\">1</span> .. <span class=\"hljs-number\">12</span><br>  .col-&#123;<span class=\"hljs-variable\">$i</span>&#125;<br>    col-attr round((<span class=\"hljs-variable\">$i</span> * <span class=\"hljs-number\">100</span> / <span class=\"hljs-number\">12</span>) %, <span class=\"hljs-number\">6</span>)<br><span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">576px</span>)<br>  for $i in <span class=\"hljs-number\">1</span> .. <span class=\"hljs-number\">12</span><br>    .col-sm-&#123;<span class=\"hljs-variable\">$i</span>&#125;<br>      col-attr round((<span class=\"hljs-variable\">$i</span> * <span class=\"hljs-number\">100</span> / <span class=\"hljs-number\">12</span>) %, <span class=\"hljs-number\">6</span>)<br><span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">768px</span>)<br>  for $i in <span class=\"hljs-number\">1</span> .. <span class=\"hljs-number\">12</span><br>    .col-md-&#123;<span class=\"hljs-variable\">$i</span>&#125;<br>      col-attr round((<span class=\"hljs-variable\">$i</span> * <span class=\"hljs-number\">100</span> / <span class=\"hljs-number\">12</span>) %, <span class=\"hljs-number\">6</span>)<br><span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">992px</span>)<br>  for $i in <span class=\"hljs-number\">1</span> .. <span class=\"hljs-number\">12</span><br>    .col-lg-&#123;<span class=\"hljs-variable\">$i</span>&#125;<br>      col-attr round((<span class=\"hljs-variable\">$i</span> * <span class=\"hljs-number\">100</span> / <span class=\"hljs-number\">12</span>) %, <span class=\"hljs-number\">6</span>)<br></code></pre></td></tr></table></figure>","categories":[{"name":"前端","path":"api/categories/前端.json"}],"tags":[{"name":"前端","path":"api/tags/前端.json"}]}