{"title":"Stylus - 实现栅格化","slug":"stylus-grid","date":"2019-12-20T08:52:45.000Z","updated":"2020-11-16T08:14:53.000Z","comments":true,"path":"api/articles/stylus-grid.json","realPath":"/2019/12/20/stylus-grid/","excerpt":"使用CSS预处理工具Stylus实现类似BootStrap中的栅格化功能。","covers":null,"cover":"https://pic.izhaoo.com/20200305030513.jpg","content":"<p>使用CSS预处理工具<code>Stylus</code>实现类似<code>BootStrap</code>中的栅格化功能。</p>\n<span id=\"more\"></span>\n\n<p>最近在开发一个博客主题，需要实现栅格化。</p>\n<p>首先想到的就是<code>BootStrap</code>，二话不说引了进来，等等……</p>\n<p>我的初衷是倾尽全力设计一个简洁的博客主题，代码也必须简洁，所以就仿照<code>BootStrap</code>，用<code>Stylus</code>实现了栅格化功能。</p>\n<p>几行代码，取代了长篇大论的<code>BootStrap</code>。</p>\n<p>食用方法同<code>BootStrap</code>。</p>\n<pre><code class=\"stylus\">// Grid\n.row\n  display -ms-flexbox\n  display flex\n  -ms-flex-wrap wrap\n  flex-wrap wrap\nfor $i in 1 .. 12\n  .col-&#123;$i&#125;, .col-md-&#123;$i&#125;, .col-lg-&#123;$i&#125;\n    position relative\n    width 100%\n    padding-right 15px\n    padding-left 15px\n    @media (max-width: 576px)\n      padding-right 0\n      padding-left 0\ncol-attr()\n  -ms-flex 0 0 arguments\n  flex 0 0 arguments\n  max-width arguments\nfor $i in 1 .. 12\n  .col-&#123;$i&#125;\n    col-attr round(($i * 100 / 12) %, 6)\n@media (min-width: 576px)\n  for $i in 1 .. 12\n    .col-sm-&#123;$i&#125;\n      col-attr round(($i * 100 / 12) %, 6)\n@media (min-width: 768px)\n  for $i in 1 .. 12\n    .col-md-&#123;$i&#125;\n      col-attr round(($i * 100 / 12) %, 6)\n@media (min-width: 992px)\n  for $i in 1 .. 12\n    .col-lg-&#123;$i&#125;\n      col-attr round(($i * 100 / 12) %, 6)</code></pre>\n","more":"<p>最近在开发一个博客主题，需要实现栅格化。</p>\n<p>首先想到的就是<code>BootStrap</code>，二话不说引了进来，等等……</p>\n<p>我的初衷是倾尽全力设计一个简洁的博客主题，代码也必须简洁，所以就仿照<code>BootStrap</code>，用<code>Stylus</code>实现了栅格化功能。</p>\n<p>几行代码，取代了长篇大论的<code>BootStrap</code>。</p>\n<p>食用方法同<code>BootStrap</code>。</p>\n<pre><code class=\"stylus\">// Grid\n.row\n  display -ms-flexbox\n  display flex\n  -ms-flex-wrap wrap\n  flex-wrap wrap\nfor $i in 1 .. 12\n  .col-&#123;$i&#125;, .col-md-&#123;$i&#125;, .col-lg-&#123;$i&#125;\n    position relative\n    width 100%\n    padding-right 15px\n    padding-left 15px\n    @media (max-width: 576px)\n      padding-right 0\n      padding-left 0\ncol-attr()\n  -ms-flex 0 0 arguments\n  flex 0 0 arguments\n  max-width arguments\nfor $i in 1 .. 12\n  .col-&#123;$i&#125;\n    col-attr round(($i * 100 / 12) %, 6)\n@media (min-width: 576px)\n  for $i in 1 .. 12\n    .col-sm-&#123;$i&#125;\n      col-attr round(($i * 100 / 12) %, 6)\n@media (min-width: 768px)\n  for $i in 1 .. 12\n    .col-md-&#123;$i&#125;\n      col-attr round(($i * 100 / 12) %, 6)\n@media (min-width: 992px)\n  for $i in 1 .. 12\n    .col-lg-&#123;$i&#125;\n      col-attr round(($i * 100 / 12) %, 6)</code></pre>","categories":[{"name":"前端","path":"api/categories/前端.json"}],"tags":[{"name":"前端","path":"api/tags/前端.json"}]}