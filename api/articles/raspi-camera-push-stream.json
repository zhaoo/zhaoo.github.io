{"title":"树莓派 - 摄像头推流","slug":"raspi-camera-push-stream","date":"2021-02-28T13:46:11.000Z","updated":"2021-02-28T13:57:59.000Z","comments":true,"path":"api/articles/raspi-camera-push-stream.json","realPath":"/2021/02/28/raspi-camera-push-stream/","excerpt":"树莓派中通过摄像头推送视频流的一些方案。","covers":null,"cover":"https://pic.izhaoo.com/20210228214818.jpg","content":"<p>树莓派中通过摄像头推送视频流的一些方案。</p>\n<span id=\"more\"></span>\n\n<p>&lt;封面摄于浙江·新昌的乡村田间，落日残霞进行后期处理而成，有点北极光的感觉。&gt;</p>\n<h3 id=\"安装摄像头\"><a href=\"#安装摄像头\" class=\"headerlink\" title=\"安装摄像头\"></a>安装摄像头</h3><ol>\n<li>将 CSI 摄像头串口插入树莓派对应的凹槽。</li>\n<li>连接完成后命令行输入 <code>sudo raspi-config</code>，Interface Options =&gt; Camera，启动摄像头并重启。</li>\n</ol>\n<h3 id=\"raspivid\"><a href=\"#raspivid\" class=\"headerlink\" title=\"raspivid\"></a>raspivid</h3><p>raspivid 是 Raspberry PI OS 内置的视频采集工具，可以直接使用摄像头采集视频并进行推流。</p>\n<p>Tips: 64 位系统暂不支持该工具，请使用 32 位系统。</p>\n<h5 id=\"TCP（H-246-裸流）\"><a href=\"#TCP（H-246-裸流）\" class=\"headerlink\" title=\"TCP（H.246 裸流）\"></a>TCP（H.246 裸流）</h5><p>执行以下命令可直接以 <strong>TCP</strong> 形式推送 <strong>H.246</strong> 格式的裸流。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ raspivid -t 0 -w 800 -h 600 -fps 20 -o - | nc -k -l 8080<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"UDP（H-246-裸流）\"><a href=\"#UDP（H-246-裸流）\" class=\"headerlink\" title=\"UDP（H.246 裸流）\"></a>UDP（H.246 裸流）</h5><p>对网络延迟要求较高的场景下，可以使用 UDP 的形式推送裸流，以降低延迟。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ raspivid -t 999999 -hf -o -| socat – udp-datagram:192.168.3.6:8080<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"ffmpeg（RTMP-串流）\"><a href=\"#ffmpeg（RTMP-串流）\" class=\"headerlink\" title=\"ffmpeg（RTMP 串流）\"></a>ffmpeg（RTMP 串流）</h5><p>在直播场景下，我们可以借助 ffmpeg 工具对视频进行转码，并推流到 RTMP 服务器；客户端可以连接该服务器接收视频。</p>\n<p>在云服务器上执行以下命令搭建 RTMP 推流服务器。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo yum install docker  <span class=\"hljs-comment\"># 安装 Docker</span><br>$ sudo docker pull tiangolo/nginx-rtmp  <span class=\"hljs-comment\"># 拉取镜像</span><br>$ sudo docker run -d -p 8080:8080 --name nginx-rtmp tiangolo/nginx-rtmp  <span class=\"hljs-comment\"># 启动服务</span><br></code></pre></td></tr></table></figure>\n\n<p>在树莓派上执行以下命令进行推流。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">raspivid -t 0 -w 800 -h 600 -o - | ffmpeg -i - -s 800x600 -f flv -b 800k -r 30 rtmp://www.izhaoo.com:8080/live<br></code></pre></td></tr></table></figure>\n\n<p><a href=\"https://zhuanlan.zhihu.com/p/52631225\">大概是最简单的 rtmp 推流服务器搭建方法</a></p>\n<h3 id=\"MJPG-streamer（MJPEG）\"><a href=\"#MJPG-streamer（MJPEG）\" class=\"headerlink\" title=\"MJPG-streamer（MJPEG）\"></a>MJPG-streamer（MJPEG）</h3><h5 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h5><p>MJPG-streamer 是一款开源视频推流服务器，以 HTTP 的形式推送 <strong>MJPEG</strong> 格式的视频，该方案实现比较简单，延迟也凑合，大约在 <em>1s</em> 内。<a href=\"https://baike.baidu.com/item/MJPEG/8966488?fr=aladdin\">MJPEG</a> 是一系列 JPG 图片帧组成的视频，只支持以 <code>&lt;img src=&quot;MJPEG 务器地址&quot;&gt;</code> 标签的形式插入 HTML 播放，不能单独分帧处理。所以只适合简单的摄像头监控场景。</p>\n<h5 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h5><p>安装依赖库：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get update  <span class=\"hljs-comment\"># 更新源</span><br>$ sudo apt-get install subversion libjpeg8-dev imagemagick libv4l-dev cmake git  <span class=\"hljs-comment\"># 安装依赖</span><br></code></pre></td></tr></table></figure>\n\n<p>本地编译项目：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo git <span class=\"hljs-built_in\">clone</span> https://github.com/jacksonliam/mjpg-streamer.git  <span class=\"hljs-comment\"># 下载项目</span><br>$ <span class=\"hljs-built_in\">cd</span> mjpg-streamer/mjpg-streamer-experimental  <span class=\"hljs-comment\"># 进入目录</span><br>$ make all  <span class=\"hljs-comment\"># 编译</span><br>$ sudo make install  <span class=\"hljs-comment\"># 安装</span><br></code></pre></td></tr></table></figure>\n\n<p>对于普通的 USB 摄像头，通过以下命令即可使用：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> mjpg-streamer/mjpg-streamer-experimental  <span class=\"hljs-comment\"># 进入目录</span><br>$ ./mjpg_streamer -i <span class=\"hljs-string\">&quot;./input_uvc.so&quot;</span> -o <span class=\"hljs-string\">&quot;./output_http.so -w ./www&quot;</span>  <span class=\"hljs-comment\"># 推送视频</span><br></code></pre></td></tr></table></figure>\n\n<p>打开浏览器输入 <code>http://树莓派IP:8080/?action=stream</code> 即可访问视频。</p>\n<h5 id=\"CSI-摄像头安装依赖\"><a href=\"#CSI-摄像头安装依赖\" class=\"headerlink\" title=\"CSI 摄像头安装依赖\"></a>CSI 摄像头安装依赖</h5><p>若是使用树莓派的 CSI 摄像头，还需要补充安装一些硬件支持依赖。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ curl https://www.linux-projects.org/listing/uv4l_repo/lpkey.asc | sudo apt-key add -  <span class=\"hljs-comment\"># 下载并安装密钥</span><br>$ vim sudo nano /etc/apt/sources.list  <span class=\"hljs-comment\"># 打开依赖源文件</span><br></code></pre></td></tr></table></figure>\n\n<p>在文件的最后一行加入： <code>deb https://www.linux-projects.org/listing/uv4l_repo/raspbian/stretch stretch main</code>，键入 <code>:wq</code> 保存。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get update  <span class=\"hljs-comment\"># 更新源</span><br>$ sudo apt-get install uv4l uv4l-raspicam uv4l-raspicam-extras  <span class=\"hljs-comment\"># 安装依赖驱动</span><br>$ sudo reboot  <span class=\"hljs-comment\"># 重启</span><br></code></pre></td></tr></table></figure>\n\n<p>重启后输入以下命令继续安装依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo pkill uv4l  <span class=\"hljs-comment\"># 关闭进程</span><br>$ sudo apt-get update  <span class=\"hljs-comment\"># 更新源</span><br>$ sudo apt-get install uv4l-uvc uv4l-xscreen uv4l-mjpegstream  <span class=\"hljs-comment\"># 安装依赖</span><br>$ sudo reboot  <span class=\"hljs-comment\"># 重启</span><br></code></pre></td></tr></table></figure>\n\n<p>重启后输入以下命令开始推送视频：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo modprobe bcm2835-v4l2  <span class=\"hljs-comment\"># 打开摄像头</span><br>$ <span class=\"hljs-built_in\">cd</span> mjpg-streamer/mjpg-streamer-experimental  <span class=\"hljs-comment\"># 进入目录</span><br>$ ./mjpg_streamer -i <span class=\"hljs-string\">&quot;./input_uvc.so -d /dev/video0 -n -y -f 25 -r 640x480&quot;</span> -o <span class=\"hljs-string\">&quot;./output_http.so -n -w /usr/local/www&quot;</span>  <span class=\"hljs-comment\"># 推送视频</span><br></code></pre></td></tr></table></figure>\n\n<p>打开浏览器输入 <code>http://树莓派IP:8080/?action=stream</code> 即可访问视频。</p>\n","more":"<p>&lt;封面摄于浙江·新昌的乡村田间，落日残霞进行后期处理而成，有点北极光的感觉。&gt;</p>\n<h3 id=\"安装摄像头\"><a href=\"#安装摄像头\" class=\"headerlink\" title=\"安装摄像头\"></a>安装摄像头</h3><ol>\n<li>将 CSI 摄像头串口插入树莓派对应的凹槽。</li>\n<li>连接完成后命令行输入 <code>sudo raspi-config</code>，Interface Options =&gt; Camera，启动摄像头并重启。</li>\n</ol>\n<h3 id=\"raspivid\"><a href=\"#raspivid\" class=\"headerlink\" title=\"raspivid\"></a>raspivid</h3><p>raspivid 是 Raspberry PI OS 内置的视频采集工具，可以直接使用摄像头采集视频并进行推流。</p>\n<p>Tips: 64 位系统暂不支持该工具，请使用 32 位系统。</p>\n<h5 id=\"TCP（H-246-裸流）\"><a href=\"#TCP（H-246-裸流）\" class=\"headerlink\" title=\"TCP（H.246 裸流）\"></a>TCP（H.246 裸流）</h5><p>执行以下命令可直接以 <strong>TCP</strong> 形式推送 <strong>H.246</strong> 格式的裸流。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ raspivid -t 0 -w 800 -h 600 -fps 20 -o - | nc -k -l 8080<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"UDP（H-246-裸流）\"><a href=\"#UDP（H-246-裸流）\" class=\"headerlink\" title=\"UDP（H.246 裸流）\"></a>UDP（H.246 裸流）</h5><p>对网络延迟要求较高的场景下，可以使用 UDP 的形式推送裸流，以降低延迟。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ raspivid -t 999999 -hf -o -| socat – udp-datagram:192.168.3.6:8080<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"ffmpeg（RTMP-串流）\"><a href=\"#ffmpeg（RTMP-串流）\" class=\"headerlink\" title=\"ffmpeg（RTMP 串流）\"></a>ffmpeg（RTMP 串流）</h5><p>在直播场景下，我们可以借助 ffmpeg 工具对视频进行转码，并推流到 RTMP 服务器；客户端可以连接该服务器接收视频。</p>\n<p>在云服务器上执行以下命令搭建 RTMP 推流服务器。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo yum install docker  <span class=\"hljs-comment\"># 安装 Docker</span><br>$ sudo docker pull tiangolo/nginx-rtmp  <span class=\"hljs-comment\"># 拉取镜像</span><br>$ sudo docker run -d -p 8080:8080 --name nginx-rtmp tiangolo/nginx-rtmp  <span class=\"hljs-comment\"># 启动服务</span><br></code></pre></td></tr></table></figure>\n\n<p>在树莓派上执行以下命令进行推流。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">raspivid -t 0 -w 800 -h 600 -o - | ffmpeg -i - -s 800x600 -f flv -b 800k -r 30 rtmp://www.izhaoo.com:8080/live<br></code></pre></td></tr></table></figure>\n\n<p><a href=\"https://zhuanlan.zhihu.com/p/52631225\">大概是最简单的 rtmp 推流服务器搭建方法</a></p>\n<h3 id=\"MJPG-streamer（MJPEG）\"><a href=\"#MJPG-streamer（MJPEG）\" class=\"headerlink\" title=\"MJPG-streamer（MJPEG）\"></a>MJPG-streamer（MJPEG）</h3><h5 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h5><p>MJPG-streamer 是一款开源视频推流服务器，以 HTTP 的形式推送 <strong>MJPEG</strong> 格式的视频，该方案实现比较简单，延迟也凑合，大约在 <em>1s</em> 内。<a href=\"https://baike.baidu.com/item/MJPEG/8966488?fr=aladdin\">MJPEG</a> 是一系列 JPG 图片帧组成的视频，只支持以 <code>&lt;img src=&quot;MJPEG 务器地址&quot;&gt;</code> 标签的形式插入 HTML 播放，不能单独分帧处理。所以只适合简单的摄像头监控场景。</p>\n<h5 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h5><p>安装依赖库：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get update  <span class=\"hljs-comment\"># 更新源</span><br>$ sudo apt-get install subversion libjpeg8-dev imagemagick libv4l-dev cmake git  <span class=\"hljs-comment\"># 安装依赖</span><br></code></pre></td></tr></table></figure>\n\n<p>本地编译项目：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo git <span class=\"hljs-built_in\">clone</span> https://github.com/jacksonliam/mjpg-streamer.git  <span class=\"hljs-comment\"># 下载项目</span><br>$ <span class=\"hljs-built_in\">cd</span> mjpg-streamer/mjpg-streamer-experimental  <span class=\"hljs-comment\"># 进入目录</span><br>$ make all  <span class=\"hljs-comment\"># 编译</span><br>$ sudo make install  <span class=\"hljs-comment\"># 安装</span><br></code></pre></td></tr></table></figure>\n\n<p>对于普通的 USB 摄像头，通过以下命令即可使用：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> mjpg-streamer/mjpg-streamer-experimental  <span class=\"hljs-comment\"># 进入目录</span><br>$ ./mjpg_streamer -i <span class=\"hljs-string\">&quot;./input_uvc.so&quot;</span> -o <span class=\"hljs-string\">&quot;./output_http.so -w ./www&quot;</span>  <span class=\"hljs-comment\"># 推送视频</span><br></code></pre></td></tr></table></figure>\n\n<p>打开浏览器输入 <code>http://树莓派IP:8080/?action=stream</code> 即可访问视频。</p>\n<h5 id=\"CSI-摄像头安装依赖\"><a href=\"#CSI-摄像头安装依赖\" class=\"headerlink\" title=\"CSI 摄像头安装依赖\"></a>CSI 摄像头安装依赖</h5><p>若是使用树莓派的 CSI 摄像头，还需要补充安装一些硬件支持依赖。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ curl https://www.linux-projects.org/listing/uv4l_repo/lpkey.asc | sudo apt-key add -  <span class=\"hljs-comment\"># 下载并安装密钥</span><br>$ vim sudo nano /etc/apt/sources.list  <span class=\"hljs-comment\"># 打开依赖源文件</span><br></code></pre></td></tr></table></figure>\n\n<p>在文件的最后一行加入： <code>deb https://www.linux-projects.org/listing/uv4l_repo/raspbian/stretch stretch main</code>，键入 <code>:wq</code> 保存。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get update  <span class=\"hljs-comment\"># 更新源</span><br>$ sudo apt-get install uv4l uv4l-raspicam uv4l-raspicam-extras  <span class=\"hljs-comment\"># 安装依赖驱动</span><br>$ sudo reboot  <span class=\"hljs-comment\"># 重启</span><br></code></pre></td></tr></table></figure>\n\n<p>重启后输入以下命令继续安装依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo pkill uv4l  <span class=\"hljs-comment\"># 关闭进程</span><br>$ sudo apt-get update  <span class=\"hljs-comment\"># 更新源</span><br>$ sudo apt-get install uv4l-uvc uv4l-xscreen uv4l-mjpegstream  <span class=\"hljs-comment\"># 安装依赖</span><br>$ sudo reboot  <span class=\"hljs-comment\"># 重启</span><br></code></pre></td></tr></table></figure>\n\n<p>重启后输入以下命令开始推送视频：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo modprobe bcm2835-v4l2  <span class=\"hljs-comment\"># 打开摄像头</span><br>$ <span class=\"hljs-built_in\">cd</span> mjpg-streamer/mjpg-streamer-experimental  <span class=\"hljs-comment\"># 进入目录</span><br>$ ./mjpg_streamer -i <span class=\"hljs-string\">&quot;./input_uvc.so -d /dev/video0 -n -y -f 25 -r 640x480&quot;</span> -o <span class=\"hljs-string\">&quot;./output_http.so -n -w /usr/local/www&quot;</span>  <span class=\"hljs-comment\"># 推送视频</span><br></code></pre></td></tr></table></figure>\n\n<p>打开浏览器输入 <code>http://树莓派IP:8080/?action=stream</code> 即可访问视频。</p>","categories":[{"name":"技术","path":"api/categories/技术.json"}],"tags":[{"name":"树莓派","path":"api/tags/树莓派.json"},{"name":"raspberrypi","path":"api/tags/raspberrypi.json"}]}