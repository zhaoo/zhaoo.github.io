{"title":"Mac OS 部署 OpenFaas","slug":"deploy-openfaas-on-mac","date":"2021-01-27T14:55:25.000Z","updated":"2021-01-27T15:02:44.000Z","comments":true,"path":"api/articles/deploy-openfaas-on-mac.json","realPath":"/2021/01/27/deploy-openfaas-on-mac/","excerpt":"在 Mac OS 中部署 OpenFaas，构建 Faas 开发环境。","covers":["https://pic.izhaoo.com/20210127203750.jpg","https://pic.izhaoo.com/20210127203823.jpg","https://pic.izhaoo.com/20210127215825.jpg","https://pic.izhaoo.com/20210127220650.jpg","https://pic.izhaoo.com/20210127220723.jpg","https://pic.izhaoo.com/20210127221825.jpg"],"cover":"https://pic.izhaoo.com/20200228081628.jpg","content":"<p>在 Mac OS 中部署 OpenFaas，构建 Faas 开发环境。</p>\n<span id=\"more\"></span>\n\n<p>Serverless 是近年来比较火的云计算技术；而 Faas（函数即服务）作为 Serverless 中的主流技术之一，基本上呈必然发展趋势。平时开发 Faas 应用我们一般使用阿里云、腾讯云等云服务商提供的云技术产品。本着开源万岁（<del>穷B烧不起钱</del>）的理念，我在 Mac 上部署了开源框架 OpenFaas 作为开发环境，下面是一些笔记。</p>\n<blockquote>\n<p><a href=\"https://zhuanlan.zhihu.com/p/78250791\">Serverless 基本概念入门</a></p>\n</blockquote>\n<h3 id=\"安装-Docker\"><a href=\"#安装-Docker\" class=\"headerlink\" title=\"安装 Docker\"></a>安装 Docker</h3><p>Mac 安装 Docker 比较简单，直接去官网下载 dmg 包，拖出来安装即可。</p>\n<p><a href=\"https://www.docker.com/products/docker-desktop\">Docker Desktop</a></p>\n<p>安装完成后双击打开，发现 Docker 服务已经跑起来了，但是 Kubernets 服务还没有安装。</p>\n<p>设置硬件配置，建议将内存设置为大于 4GB。</p>\n<p><img  src=\"https://pic.izhaoo.com/20210127203750.jpg\"  ><span class=\"image-caption\">设置硬件</span></p>\n<p>设置镜像源加速下载：</p>\n<pre><code class=\"json\">&#123;\n  &quot;debug&quot;: true,\n  &quot;experimental&quot;: false,\n  &quot;registry-mirrors&quot;: [\n    &quot;https://reg-mirror.qiniu.com&quot;,\n    &quot;https://docker.mirrors.ustc.edu.cn&quot;,\n    &quot;https://dockerhub.azk8s.cn&quot;,\n    &quot;https://hub-mirror.c.163.com&quot;,\n    &quot;https://registry.docker-cn.com&quot;\n  ]\n&#125;</code></pre>\n<p><img  src=\"https://pic.izhaoo.com/20210127203823.jpg\"  ><span class=\"image-caption\">设置镜像源</span></p>\n<p>注意：不要在此处一键安装 Kubernets，会因为缺少依赖跑不起来，后面我们单独安装。</p>\n<h3 id=\"安装-Kubernets\"><a href=\"#安装-Kubernets\" class=\"headerlink\" title=\"安装 Kubernets\"></a>安装 Kubernets</h3><p>这里我们使用阿里云的脚本一键安装 Kubernets。</p>\n<p><a href=\"https://github.com/AliyunContainerService/k8s-for-docker-desktop\">k8s-for-docker-desktop</a></p>\n<p>需要在 Docker-Desktop 中查看 Kubernets 的版本，我这里是 <em>v1.19.3</em>。</p>\n<p><img  src=\"https://pic.izhaoo.com/20210127215825.jpg\"  ><span class=\"image-caption\">查看 Kubernets 版本</span></p>\n<p>然后将分支切换到对应的版本，下载脚本并执行如下命令。</p>\n<pre><code class=\"bash\">cd k8s-for-docker-desktop  # 进入脚本目录\nchmod +x ./load_images.sh  # 赋予权限\n./load_images.sh  # 执行安装脚本</code></pre>\n<p>稍等片刻后安装完成。此时我们在 Docker-Desktop 中设置【开启 Kubernets】，重启 Docker 即可。</p>\n<p><img  src=\"https://pic.izhaoo.com/20210127220650.jpg\"  ><span class=\"image-caption\">开启 Kubernets</span></p>\n<p><img  src=\"https://pic.izhaoo.com/20210127220723.jpg\"  ><span class=\"image-caption\">重启 Docker</span></p>\n<h3 id=\"安装-OpenFaas\"><a href=\"#安装-OpenFaas\" class=\"headerlink\" title=\"安装 OpenFaas\"></a>安装 OpenFaas</h3><p>执行以下命令安装 OpenFaas：</p>\n<p><strong>命名空间</strong></p>\n<pre><code class=\"bash\">git clone https://github.com/openfaas/faas-netes  # 克隆源码\ncd faas-netes  # 进入目录\nkubectl apply -f namespaces.yml  # 应用命名空间</code></pre>\n<p><strong>设置账号</strong></p>\n<p>将以下脚本保存为 <code>pwd.sh</code> 文件并执行，设置用户名和密码。</p>\n<pre><code class=\"sh\">kubectl -n openfaas create secret generic basic-auth \\\n--from-literal=basic-auth-user=admin \\  # 用户名 admin\n--from-literal=basic-auth-password=admin  # 密码 admin</code></pre>\n<pre><code class=\"bash\">chmod +x ./pws.sh  # 赋予权限\n./pwd.sh  # 执行安装脚本</code></pre>\n<p><strong>部署应用</strong></p>\n<pre><code class=\"bash\">kubectl apply -f ./yaml  #部署应用\nkubectl get pods -n openfaas  #查看应用运行状态\n\n# 当应用全部启动（Running）时表示安装成功</code></pre>\n<p>此时浏览器访问 <code>http://127.0.0.1:31112</code> 输入用户名密码，即可进入 <em>Web GUI</em>。可在该页面部署函数，系统也自带了一些实例函数。</p>\n<p><img  src=\"https://pic.izhaoo.com/20210127221825.jpg\"  ><span class=\"image-caption\">Web GUI</span></p>\n<h3 id=\"安装-OpenFaas-CLI\"><a href=\"#安装-OpenFaas-CLI\" class=\"headerlink\" title=\"安装 OpenFaas-CLI\"></a>安装 OpenFaas-CLI</h3><p>在实际开发中使用 <em>GUI</em> 并不是很方便，接下来我们安装 <em>CLI</em>，以命令行的形式部署函数。</p>\n<p>Mac 中可以使用 <em>brew</em> 一键安装 openfaas-cli：</p>\n<pre><code class=\"bash\">brew install openfass-cli  # 使用 brew 安装</code></pre>\n<p>也可以使用在线脚本安装：</p>\n<pre><code class=\"bash\">curl -sSL https://cli.openfaas.com | sudo sh  # 使用在线脚本安装</code></pre>\n<p>测试一下是否安装成功：</p>\n<pre><code class=\"bash\">fass-cli help # 打印帮助文档</code></pre>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>接下来部署一个名为 <em>hello</em> 的 Node.js 函数作为示例。</p>\n<p>首先先我们去 <a href=\"https://hub.docker.com/\">Docker Hub</a> 注册一个账号。</p>\n<p><strong>创建函数</strong></p>\n<pre><code class=\"bash\">faas-cli new hello --lang node12 -p zhaoo  # 创建函数</code></pre>\n<p><code>--lang node12</code> 表示使用 Node v12，可以使用 <code>faas-cli template store list</code> 打印所有语言模板。<br><code>-p</code> 表示命名前缀，使用刚才创建的 <em>Docker Hub</em> 的用户名即可。</p>\n<p><strong>构建函数</strong></p>\n<p>函数安装生成环境的依赖并打包构建。</p>\n<pre><code class=\"bash\">faas-cli build -f hello.yml  # 构建函数</code></pre>\n<p><strong>推送函数</strong></p>\n<p>将构建好的函数推送到 <em>Docker Hub</em> 仓库。</p>\n<pre><code class=\"bash\">faas-cli push -f hello.yml  # 推送函数</code></pre>\n<p>推送完成后可在 <a href=\"https://hub.docker.com/repositories\">Docker Hub 仓库</a> 中查看。</p>\n<p><strong>部署函数</strong></p>\n<p>从 <em>Docker Hub</em> 仓库中拉取函数源码并部署到生产环境，这里的环境就是本地。</p>\n<pre><code class=\"bash\">faas-cli deploy  # 部署函数</code></pre>\n<p>部署完成后可以通过 <em>Web GUI</em> 查看到我们部署的函数，点击 <em>INVOKE</em> 按钮可调用函数。</p>\n","more":"<p>Serverless 是近年来比较火的云计算技术；而 Faas（函数即服务）作为 Serverless 中的主流技术之一，基本上呈必然发展趋势。平时开发 Faas 应用我们一般使用阿里云、腾讯云等云服务商提供的云技术产品。本着开源万岁（<del>穷B烧不起钱</del>）的理念，我在 Mac 上部署了开源框架 OpenFaas 作为开发环境，下面是一些笔记。</p>\n<blockquote>\n<p><a href=\"https://zhuanlan.zhihu.com/p/78250791\">Serverless 基本概念入门</a></p>\n</blockquote>\n<h3 id=\"安装-Docker\"><a href=\"#安装-Docker\" class=\"headerlink\" title=\"安装 Docker\"></a>安装 Docker</h3><p>Mac 安装 Docker 比较简单，直接去官网下载 dmg 包，拖出来安装即可。</p>\n<p><a href=\"https://www.docker.com/products/docker-desktop\">Docker Desktop</a></p>\n<p>安装完成后双击打开，发现 Docker 服务已经跑起来了，但是 Kubernets 服务还没有安装。</p>\n<p>设置硬件配置，建议将内存设置为大于 4GB。</p>\n<p><img  src=\"https://pic.izhaoo.com/20210127203750.jpg\"  ><span class=\"image-caption\">设置硬件</span></p>\n<p>设置镜像源加速下载：</p>\n<pre><code class=\"json\">&#123;\n  &quot;debug&quot;: true,\n  &quot;experimental&quot;: false,\n  &quot;registry-mirrors&quot;: [\n    &quot;https://reg-mirror.qiniu.com&quot;,\n    &quot;https://docker.mirrors.ustc.edu.cn&quot;,\n    &quot;https://dockerhub.azk8s.cn&quot;,\n    &quot;https://hub-mirror.c.163.com&quot;,\n    &quot;https://registry.docker-cn.com&quot;\n  ]\n&#125;</code></pre>\n<p><img  src=\"https://pic.izhaoo.com/20210127203823.jpg\"  ><span class=\"image-caption\">设置镜像源</span></p>\n<p>注意：不要在此处一键安装 Kubernets，会因为缺少依赖跑不起来，后面我们单独安装。</p>\n<h3 id=\"安装-Kubernets\"><a href=\"#安装-Kubernets\" class=\"headerlink\" title=\"安装 Kubernets\"></a>安装 Kubernets</h3><p>这里我们使用阿里云的脚本一键安装 Kubernets。</p>\n<p><a href=\"https://github.com/AliyunContainerService/k8s-for-docker-desktop\">k8s-for-docker-desktop</a></p>\n<p>需要在 Docker-Desktop 中查看 Kubernets 的版本，我这里是 <em>v1.19.3</em>。</p>\n<p><img  src=\"https://pic.izhaoo.com/20210127215825.jpg\"  ><span class=\"image-caption\">查看 Kubernets 版本</span></p>\n<p>然后将分支切换到对应的版本，下载脚本并执行如下命令。</p>\n<pre><code class=\"bash\">cd k8s-for-docker-desktop  # 进入脚本目录\nchmod +x ./load_images.sh  # 赋予权限\n./load_images.sh  # 执行安装脚本</code></pre>\n<p>稍等片刻后安装完成。此时我们在 Docker-Desktop 中设置【开启 Kubernets】，重启 Docker 即可。</p>\n<p><img  src=\"https://pic.izhaoo.com/20210127220650.jpg\"  ><span class=\"image-caption\">开启 Kubernets</span></p>\n<p><img  src=\"https://pic.izhaoo.com/20210127220723.jpg\"  ><span class=\"image-caption\">重启 Docker</span></p>\n<h3 id=\"安装-OpenFaas\"><a href=\"#安装-OpenFaas\" class=\"headerlink\" title=\"安装 OpenFaas\"></a>安装 OpenFaas</h3><p>执行以下命令安装 OpenFaas：</p>\n<p><strong>命名空间</strong></p>\n<pre><code class=\"bash\">git clone https://github.com/openfaas/faas-netes  # 克隆源码\ncd faas-netes  # 进入目录\nkubectl apply -f namespaces.yml  # 应用命名空间</code></pre>\n<p><strong>设置账号</strong></p>\n<p>将以下脚本保存为 <code>pwd.sh</code> 文件并执行，设置用户名和密码。</p>\n<pre><code class=\"sh\">kubectl -n openfaas create secret generic basic-auth \\\n--from-literal=basic-auth-user=admin \\  # 用户名 admin\n--from-literal=basic-auth-password=admin  # 密码 admin</code></pre>\n<pre><code class=\"bash\">chmod +x ./pws.sh  # 赋予权限\n./pwd.sh  # 执行安装脚本</code></pre>\n<p><strong>部署应用</strong></p>\n<pre><code class=\"bash\">kubectl apply -f ./yaml  #部署应用\nkubectl get pods -n openfaas  #查看应用运行状态\n\n# 当应用全部启动（Running）时表示安装成功</code></pre>\n<p>此时浏览器访问 <code>http://127.0.0.1:31112</code> 输入用户名密码，即可进入 <em>Web GUI</em>。可在该页面部署函数，系统也自带了一些实例函数。</p>\n<p><img  src=\"https://pic.izhaoo.com/20210127221825.jpg\"  ><span class=\"image-caption\">Web GUI</span></p>\n<h3 id=\"安装-OpenFaas-CLI\"><a href=\"#安装-OpenFaas-CLI\" class=\"headerlink\" title=\"安装 OpenFaas-CLI\"></a>安装 OpenFaas-CLI</h3><p>在实际开发中使用 <em>GUI</em> 并不是很方便，接下来我们安装 <em>CLI</em>，以命令行的形式部署函数。</p>\n<p>Mac 中可以使用 <em>brew</em> 一键安装 openfaas-cli：</p>\n<pre><code class=\"bash\">brew install openfass-cli  # 使用 brew 安装</code></pre>\n<p>也可以使用在线脚本安装：</p>\n<pre><code class=\"bash\">curl -sSL https://cli.openfaas.com | sudo sh  # 使用在线脚本安装</code></pre>\n<p>测试一下是否安装成功：</p>\n<pre><code class=\"bash\">fass-cli help # 打印帮助文档</code></pre>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>接下来部署一个名为 <em>hello</em> 的 Node.js 函数作为示例。</p>\n<p>首先先我们去 <a href=\"https://hub.docker.com/\">Docker Hub</a> 注册一个账号。</p>\n<p><strong>创建函数</strong></p>\n<pre><code class=\"bash\">faas-cli new hello --lang node12 -p zhaoo  # 创建函数</code></pre>\n<p><code>--lang node12</code> 表示使用 Node v12，可以使用 <code>faas-cli template store list</code> 打印所有语言模板。<br><code>-p</code> 表示命名前缀，使用刚才创建的 <em>Docker Hub</em> 的用户名即可。</p>\n<p><strong>构建函数</strong></p>\n<p>函数安装生成环境的依赖并打包构建。</p>\n<pre><code class=\"bash\">faas-cli build -f hello.yml  # 构建函数</code></pre>\n<p><strong>推送函数</strong></p>\n<p>将构建好的函数推送到 <em>Docker Hub</em> 仓库。</p>\n<pre><code class=\"bash\">faas-cli push -f hello.yml  # 推送函数</code></pre>\n<p>推送完成后可在 <a href=\"https://hub.docker.com/repositories\">Docker Hub 仓库</a> 中查看。</p>\n<p><strong>部署函数</strong></p>\n<p>从 <em>Docker Hub</em> 仓库中拉取函数源码并部署到生产环境，这里的环境就是本地。</p>\n<pre><code class=\"bash\">faas-cli deploy  # 部署函数</code></pre>\n<p>部署完成后可以通过 <em>Web GUI</em> 查看到我们部署的函数，点击 <em>INVOKE</em> 按钮可调用函数。</p>","categories":[{"name":"技术","path":"api/categories/技术.json"}],"tags":[{"name":"faas","path":"api/tags/faas.json"},{"name":"服务器","path":"api/tags/服务器.json"}]}