{"title":"JavaScript - 设计模式","slug":"design-pattern-note","date":"2020-02-29T01:58:17.000Z","updated":"2020-05-22T02:29:34.000Z","comments":true,"path":"api/articles/design-pattern-note.json","realPath":"/2020/02/29/design-pattern-note/","excerpt":"摘录JavaScript常用设计模式，其实这些平时有意无意都在使用，借着面试机会整理一下。","covers":null,"cover":"https://pic.izhaoo.com/20200228081718.jpg","content":"<p>摘录<code>JavaScript</code>常用设计模式，其实这些平时有意无意都在使用，借着面试机会整理一下。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"行为类\"><a href=\"#行为类\" class=\"headerlink\" title=\"行为类\"></a>行为类</h1><h3 id=\"发布-订阅模式-Publish-Subscribe\"><a href=\"#发布-订阅模式-Publish-Subscribe\" class=\"headerlink\" title=\"发布-订阅模式 Publish-Subscribe\"></a>发布-订阅模式 Publish-Subscribe</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"创建类\"><a href=\"#创建类\" class=\"headerlink\" title=\"创建类\"></a>创建类</h1><h3 id=\"构造器模式-Constructor\"><a href=\"#构造器模式-Constructor\" class=\"headerlink\" title=\"构造器模式 Constructor\"></a>构造器模式 Constructor</h3><p>类似于面向对象中的构造器，由于ES5中没有很好的对象概念，现以函数的形式模拟，本质一样。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES5</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Student</span>(<span class=\"hljs-params\">name, gender</span>) </span>&#123;<br>  <span class=\"hljs-built_in\">this</span>.name = name;<br>  <span class=\"hljs-built_in\">this</span>.gender = gender<br>  <span class=\"hljs-built_in\">this</span>.print = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;姓名:&#x27;</span> + <span class=\"hljs-built_in\">this</span>.name + <span class=\"hljs-string\">&#x27;性别:&#x27;</span> + <span class=\"hljs-built_in\">this</span>.gender);<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">var</span> zhaoo = <span class=\"hljs-keyword\">new</span> Student(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>, <span class=\"hljs-string\">&#x27;male&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> pp = <span class=\"hljs-keyword\">new</span> Student(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>, <span class=\"hljs-string\">&#x27;female&#x27;</span>);<br><br>zhaoo.print();<br>pp.print();<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES6</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Student</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\">name, gender</span>)</span> &#123;<br>    <span class=\"hljs-built_in\">this</span>.name = name;<br>    <span class=\"hljs-built_in\">this</span>.gender = gender;<br>  &#125;<br><br>  print = <span class=\"hljs-function\">() =&gt;</span> &#123;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`姓名:<span class=\"hljs-subst\">$&#123;<span class=\"hljs-built_in\">this</span>.name&#125;</span>性别:<span class=\"hljs-subst\">$&#123;<span class=\"hljs-built_in\">this</span>.gender&#125;</span>`</span>);<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">const</span> zhaoo = <span class=\"hljs-keyword\">new</span> Student(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>, <span class=\"hljs-string\">&#x27;male&#x27;</span>);<br><span class=\"hljs-keyword\">const</span> pp = <span class=\"hljs-keyword\">new</span> Student(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>, <span class=\"hljs-string\">&#x27;female&#x27;</span>);<br><br>zhaoo.print();<br>pp.print();<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"原型模式-Prototype\"><a href=\"#原型模式-Prototype\" class=\"headerlink\" title=\"原型模式 Prototype\"></a>原型模式 Prototype</h3><p>之前对象中，每创建一个实例，内部都会实例化一份<code>print</code>函数，造成资源浪费。现使用<code>prototype</code>构造对象原型，相当于对<code>print</code>函数的一个引用，进行了优化。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES5</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Student</span>(<span class=\"hljs-params\">name, gender</span>) </span>&#123;<br>  <span class=\"hljs-built_in\">this</span>.name = name;<br>  <span class=\"hljs-built_in\">this</span>.gender = gender<br>&#125;<br><br>Student.prototype.print = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;姓名:&#x27;</span> + <span class=\"hljs-built_in\">this</span>.name + <span class=\"hljs-string\">&#x27;性别:&#x27;</span> + <span class=\"hljs-built_in\">this</span>.gender);<br>&#125;<br><br><span class=\"hljs-keyword\">var</span> zhaoo = <span class=\"hljs-keyword\">new</span> Student(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>, <span class=\"hljs-string\">&#x27;male&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> pp = <span class=\"hljs-keyword\">new</span> Student(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>, <span class=\"hljs-string\">&#x27;female&#x27;</span>);<br><br>zhaoo.print();<br>pp.print();<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"建造者模式-Builder\"><a href=\"#建造者模式-Builder\" class=\"headerlink\" title=\"建造者模式 Builder\"></a>建造者模式 Builder</h3><p>在对象外封装一层构建器，作为基层控制者，使用<code>set</code>、<code>get</code>等方法创建获取内部变量。在对象内部可以方便对成员变量进行操纵、校验等操作，更加灵活、规范。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES5</span><br><br><span class=\"hljs-keyword\">var</span> failCount = <span class=\"hljs-number\">0</span>;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Student</span>(<span class=\"hljs-params\"></span>) </span>&#123;&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">StudentBuilder</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-built_in\">this</span>.student = <span class=\"hljs-keyword\">new</span> Student();<br><br>  StudentBuilder.prototype.setName = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">name</span>) </span>&#123;<br>    <span class=\"hljs-built_in\">this</span>.student.name = name;<br>  &#125;<br><br>  StudentBuilder.prototype.setScore = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">score</span>) </span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> score !== <span class=\"hljs-built_in\">Number</span>)<br>      <span class=\"hljs-keyword\">throw</span> (<span class=\"hljs-string\">&#x27;score 输入类型错误&#x27;</span>);<br>    <span class=\"hljs-built_in\">this</span>.student.score = score;<br>  &#125;<br><br>  StudentBuilder.prototype.build = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">this</span>.student.score &lt; <span class=\"hljs-number\">60</span>)<br>      failCount++;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>.student;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">var</span> builder = <span class=\"hljs-keyword\">new</span> StudentBuilder();<br>builder.setName(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>);<br>builder.setScore(<span class=\"hljs-number\">90</span>);<br><span class=\"hljs-keyword\">var</span> zhaoo = builder.build();<br><br><span class=\"hljs-keyword\">var</span> builder = <span class=\"hljs-keyword\">new</span> StudentBuilder();<br>builder.setName(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>);<br>builder.setScore(<span class=\"hljs-number\">59</span>);<br><span class=\"hljs-keyword\">var</span> pp = builder.build();<br><br><span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;挂科人数:&#x27;</span> + failCount);<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES6</span><br><br><span class=\"hljs-keyword\">let</span> failCount = <span class=\"hljs-number\">0</span>;<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Student</span> </span>&#123;&#125;<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">StudentBuilder</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\"></span>)</span> &#123;<br>    <span class=\"hljs-built_in\">this</span>.student = <span class=\"hljs-keyword\">new</span> Student();<br>  &#125;<br><br>  <span class=\"hljs-function\"><span class=\"hljs-title\">setName</span>(<span class=\"hljs-params\">name</span>)</span> &#123;<br>    <span class=\"hljs-built_in\">this</span>.student.name = name;<br>  &#125;<br><br>  <span class=\"hljs-function\"><span class=\"hljs-title\">setScore</span>(<span class=\"hljs-params\">score</span>)</span> &#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> score !== <span class=\"hljs-built_in\">Number</span>)<br>      <span class=\"hljs-keyword\">throw</span> (<span class=\"hljs-string\">&#x27;score 输入类型错误&#x27;</span>);<br>    <span class=\"hljs-built_in\">this</span>.student.score = score;<br>  &#125;<br><br>  <span class=\"hljs-function\"><span class=\"hljs-title\">build</span>(<span class=\"hljs-params\"></span>)</span> &#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">this</span>.student.score &lt; <span class=\"hljs-number\">60</span>)<br>      failCount++;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>.student;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">const</span> builder = <span class=\"hljs-keyword\">new</span> StudentBuilder();<br>builder.setName(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>);<br>builder.setScore(<span class=\"hljs-number\">90</span>);<br><span class=\"hljs-keyword\">const</span> zhaoo = builder.build();<br><br><span class=\"hljs-keyword\">const</span> builder = <span class=\"hljs-keyword\">new</span> StudentBuilder();<br>builder.setName(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>);<br>builder.setScore(<span class=\"hljs-number\">59</span>);<br><span class=\"hljs-keyword\">const</span> pp = builder.build();<br><br><span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;挂科人数:&#x27;</span> + failCount);<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"工厂模式-Factory\"><a href=\"#工厂模式-Factory\" class=\"headerlink\" title=\"工厂模式 Factory\"></a>工厂模式 Factory</h3><p>包装并返回对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES5</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Student</span>(<span class=\"hljs-params\">name, subjects</span>) </span>&#123;<br>  <span class=\"hljs-built_in\">this</span>.name = name;<br>  <span class=\"hljs-built_in\">this</span>.subjects = subjects;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">factory</span>(<span class=\"hljs-params\">name, type</span>) </span>&#123;<br>  <span class=\"hljs-keyword\">switch</span> (type) &#123;<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;软件工程&#x27;</span>:<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Student(name, [<span class=\"hljs-string\">&#x27;数据结构&#x27;</span>, <span class=\"hljs-string\">&#x27;设计模式&#x27;</span>, <span class=\"hljs-string\">&#x27;算法设计&#x27;</span>]);<br>      <span class=\"hljs-keyword\">break</span>;<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;城乡规划&#x27;</span>:<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Student(name, [<span class=\"hljs-string\">&#x27;城市道路与交通规划&#x27;</span>, <span class=\"hljs-string\">&#x27;村镇规划设计&#x27;</span>, <span class=\"hljs-string\">&#x27;城市建设史与规划史&#x27;</span>]);<br>      <span class=\"hljs-keyword\">break</span>;<br>    <span class=\"hljs-keyword\">default</span>:<br>      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">&#x27;没这个专业，别瞎填&#x27;</span>;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">var</span> zhaoo = factory(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>, <span class=\"hljs-string\">&#x27;软件工程&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> pp = factory(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>, <span class=\"hljs-string\">&#x27;城乡规划&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES6</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Student</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\">name, subjects</span>)</span> &#123;<br>    <span class=\"hljs-built_in\">this</span>.name = name;<br>    <span class=\"hljs-built_in\">this</span>.subjects = subjects;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">const</span> factory = <span class=\"hljs-function\">(<span class=\"hljs-params\">name, type</span>) =&gt;</span> &#123;<br>  <span class=\"hljs-keyword\">switch</span> (type) &#123;<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;软件工程&#x27;</span>:<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Student(name, [<span class=\"hljs-string\">&#x27;数据结构&#x27;</span>, <span class=\"hljs-string\">&#x27;设计模式&#x27;</span>, <span class=\"hljs-string\">&#x27;算法设计&#x27;</span>]);<br>      <span class=\"hljs-keyword\">break</span>;<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;城乡规划&#x27;</span>:<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Student(name, [<span class=\"hljs-string\">&#x27;城市道路与交通规划&#x27;</span>, <span class=\"hljs-string\">&#x27;村镇规划设计&#x27;</span>, <span class=\"hljs-string\">&#x27;城市建设史与规划史&#x27;</span>]);<br>      <span class=\"hljs-keyword\">break</span>;<br>    <span class=\"hljs-keyword\">default</span>:<br>      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">&#x27;没这个专业，别瞎填&#x27;</span>;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">const</span> zhaoo = factory(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>, <span class=\"hljs-string\">&#x27;软件工程&#x27;</span>);<br><span class=\"hljs-keyword\">const</span> pp = factory(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>, <span class=\"hljs-string\">&#x27;城乡规划&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"抽象工程模式-AbstractFactory\"><a href=\"#抽象工程模式-AbstractFactory\" class=\"headerlink\" title=\"抽象工程模式 AbstractFactory\"></a>抽象工程模式 AbstractFactory</h3><p>工厂外再包一层工厂，用于上产工厂。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Student</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-built_in\">this</span>.intro = <span class=\"hljs-string\">&#x27;我是个学生&#x27;</span>;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Teacher</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-built_in\">this</span>.intro = <span class=\"hljs-string\">&#x27;我是个老师&#x27;</span>;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">StudentFactory</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Student();<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">TeacherFactory</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Teacher();<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Producer</span>(<span class=\"hljs-params\">factory</span>) </span>&#123;<br>  <span class=\"hljs-keyword\">switch</span> (factory) &#123;<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;student&#x27;</span>:<br>      <span class=\"hljs-keyword\">return</span> StudentFactory;<br>      <span class=\"hljs-keyword\">break</span>;<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;teacher&#x27;</span>:<br>      <span class=\"hljs-keyword\">return</span> TeacherFactory;<br>      <span class=\"hljs-keyword\">break</span>;<br>    <span class=\"hljs-keyword\">default</span>:<br>      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">&#x27;没这个工厂&#x27;</span>;<br>      <span class=\"hljs-keyword\">break</span>;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">var</span> sFactory = Producer(<span class=\"hljs-string\">&#x27;student&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> zhaoo = factory(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> tFactory = Producer(<span class=\"hljs-string\">&#x27;teacher&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> pp = factory(<span class=\"hljs-string\">&#x27;小潘&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"单例模式-Singleton\"><a href=\"#单例模式-Singleton\" class=\"headerlink\" title=\"单例模式 Singleton\"></a>单例模式 Singleton</h3><p>避免重复创建，实例化对象前先判断是已实例化。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES5</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singleton</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-keyword\">if</span> (Singleton.instance)<br>    <span class=\"hljs-keyword\">return</span> Singleton.instance;<br>  <span class=\"hljs-keyword\">else</span> &#123;<br>    <span class=\"hljs-built_in\">this</span>.countdown = <span class=\"hljs-number\">60</span>;<br>    Singleton.instance = <span class=\"hljs-built_in\">this</span>;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">var</span> s1 = <span class=\"hljs-keyword\">new</span> Singleton();<br><span class=\"hljs-keyword\">var</span> s2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">new</span> Singleton();<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES6</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singleton</span> </span>&#123;<br>  <span class=\"hljs-title\">constructor</span> (<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">if</span> (Singleton.instance)<br>      <span class=\"hljs-keyword\">return</span> Singleton.instance;<br>    <span class=\"hljs-keyword\">else</span> &#123;<br>      <span class=\"hljs-built_in\">this</span>.countdown = <span class=\"hljs-number\">60</span>;<br>      Singleton.instance = <span class=\"hljs-built_in\">this</span>;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">const</span> s1 = <span class=\"hljs-keyword\">new</span> Singleton();<br><span class=\"hljs-keyword\">const</span> s2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">new</span> Singleton();<br></code></pre></td></tr></table></figure>\n\n<p>未完待续……</p>\n","more":"<h1 id=\"行为类\"><a href=\"#行为类\" class=\"headerlink\" title=\"行为类\"></a>行为类</h1><h3 id=\"发布-订阅模式-Publish-Subscribe\"><a href=\"#发布-订阅模式-Publish-Subscribe\" class=\"headerlink\" title=\"发布-订阅模式 Publish-Subscribe\"></a>发布-订阅模式 Publish-Subscribe</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"创建类\"><a href=\"#创建类\" class=\"headerlink\" title=\"创建类\"></a>创建类</h1><h3 id=\"构造器模式-Constructor\"><a href=\"#构造器模式-Constructor\" class=\"headerlink\" title=\"构造器模式 Constructor\"></a>构造器模式 Constructor</h3><p>类似于面向对象中的构造器，由于ES5中没有很好的对象概念，现以函数的形式模拟，本质一样。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES5</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Student</span>(<span class=\"hljs-params\">name, gender</span>) </span>&#123;<br>  <span class=\"hljs-built_in\">this</span>.name = name;<br>  <span class=\"hljs-built_in\">this</span>.gender = gender<br>  <span class=\"hljs-built_in\">this</span>.print = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;姓名:&#x27;</span> + <span class=\"hljs-built_in\">this</span>.name + <span class=\"hljs-string\">&#x27;性别:&#x27;</span> + <span class=\"hljs-built_in\">this</span>.gender);<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">var</span> zhaoo = <span class=\"hljs-keyword\">new</span> Student(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>, <span class=\"hljs-string\">&#x27;male&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> pp = <span class=\"hljs-keyword\">new</span> Student(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>, <span class=\"hljs-string\">&#x27;female&#x27;</span>);<br><br>zhaoo.print();<br>pp.print();<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES6</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Student</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\">name, gender</span>)</span> &#123;<br>    <span class=\"hljs-built_in\">this</span>.name = name;<br>    <span class=\"hljs-built_in\">this</span>.gender = gender;<br>  &#125;<br><br>  print = <span class=\"hljs-function\">() =&gt;</span> &#123;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`姓名:<span class=\"hljs-subst\">$&#123;<span class=\"hljs-built_in\">this</span>.name&#125;</span>性别:<span class=\"hljs-subst\">$&#123;<span class=\"hljs-built_in\">this</span>.gender&#125;</span>`</span>);<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">const</span> zhaoo = <span class=\"hljs-keyword\">new</span> Student(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>, <span class=\"hljs-string\">&#x27;male&#x27;</span>);<br><span class=\"hljs-keyword\">const</span> pp = <span class=\"hljs-keyword\">new</span> Student(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>, <span class=\"hljs-string\">&#x27;female&#x27;</span>);<br><br>zhaoo.print();<br>pp.print();<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"原型模式-Prototype\"><a href=\"#原型模式-Prototype\" class=\"headerlink\" title=\"原型模式 Prototype\"></a>原型模式 Prototype</h3><p>之前对象中，每创建一个实例，内部都会实例化一份<code>print</code>函数，造成资源浪费。现使用<code>prototype</code>构造对象原型，相当于对<code>print</code>函数的一个引用，进行了优化。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES5</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Student</span>(<span class=\"hljs-params\">name, gender</span>) </span>&#123;<br>  <span class=\"hljs-built_in\">this</span>.name = name;<br>  <span class=\"hljs-built_in\">this</span>.gender = gender<br>&#125;<br><br>Student.prototype.print = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;姓名:&#x27;</span> + <span class=\"hljs-built_in\">this</span>.name + <span class=\"hljs-string\">&#x27;性别:&#x27;</span> + <span class=\"hljs-built_in\">this</span>.gender);<br>&#125;<br><br><span class=\"hljs-keyword\">var</span> zhaoo = <span class=\"hljs-keyword\">new</span> Student(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>, <span class=\"hljs-string\">&#x27;male&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> pp = <span class=\"hljs-keyword\">new</span> Student(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>, <span class=\"hljs-string\">&#x27;female&#x27;</span>);<br><br>zhaoo.print();<br>pp.print();<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"建造者模式-Builder\"><a href=\"#建造者模式-Builder\" class=\"headerlink\" title=\"建造者模式 Builder\"></a>建造者模式 Builder</h3><p>在对象外封装一层构建器，作为基层控制者，使用<code>set</code>、<code>get</code>等方法创建获取内部变量。在对象内部可以方便对成员变量进行操纵、校验等操作，更加灵活、规范。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES5</span><br><br><span class=\"hljs-keyword\">var</span> failCount = <span class=\"hljs-number\">0</span>;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Student</span>(<span class=\"hljs-params\"></span>) </span>&#123;&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">StudentBuilder</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-built_in\">this</span>.student = <span class=\"hljs-keyword\">new</span> Student();<br><br>  StudentBuilder.prototype.setName = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">name</span>) </span>&#123;<br>    <span class=\"hljs-built_in\">this</span>.student.name = name;<br>  &#125;<br><br>  StudentBuilder.prototype.setScore = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">score</span>) </span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> score !== <span class=\"hljs-built_in\">Number</span>)<br>      <span class=\"hljs-keyword\">throw</span> (<span class=\"hljs-string\">&#x27;score 输入类型错误&#x27;</span>);<br>    <span class=\"hljs-built_in\">this</span>.student.score = score;<br>  &#125;<br><br>  StudentBuilder.prototype.build = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">this</span>.student.score &lt; <span class=\"hljs-number\">60</span>)<br>      failCount++;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>.student;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">var</span> builder = <span class=\"hljs-keyword\">new</span> StudentBuilder();<br>builder.setName(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>);<br>builder.setScore(<span class=\"hljs-number\">90</span>);<br><span class=\"hljs-keyword\">var</span> zhaoo = builder.build();<br><br><span class=\"hljs-keyword\">var</span> builder = <span class=\"hljs-keyword\">new</span> StudentBuilder();<br>builder.setName(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>);<br>builder.setScore(<span class=\"hljs-number\">59</span>);<br><span class=\"hljs-keyword\">var</span> pp = builder.build();<br><br><span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;挂科人数:&#x27;</span> + failCount);<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES6</span><br><br><span class=\"hljs-keyword\">let</span> failCount = <span class=\"hljs-number\">0</span>;<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Student</span> </span>&#123;&#125;<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">StudentBuilder</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\"></span>)</span> &#123;<br>    <span class=\"hljs-built_in\">this</span>.student = <span class=\"hljs-keyword\">new</span> Student();<br>  &#125;<br><br>  <span class=\"hljs-function\"><span class=\"hljs-title\">setName</span>(<span class=\"hljs-params\">name</span>)</span> &#123;<br>    <span class=\"hljs-built_in\">this</span>.student.name = name;<br>  &#125;<br><br>  <span class=\"hljs-function\"><span class=\"hljs-title\">setScore</span>(<span class=\"hljs-params\">score</span>)</span> &#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> score !== <span class=\"hljs-built_in\">Number</span>)<br>      <span class=\"hljs-keyword\">throw</span> (<span class=\"hljs-string\">&#x27;score 输入类型错误&#x27;</span>);<br>    <span class=\"hljs-built_in\">this</span>.student.score = score;<br>  &#125;<br><br>  <span class=\"hljs-function\"><span class=\"hljs-title\">build</span>(<span class=\"hljs-params\"></span>)</span> &#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">this</span>.student.score &lt; <span class=\"hljs-number\">60</span>)<br>      failCount++;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>.student;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">const</span> builder = <span class=\"hljs-keyword\">new</span> StudentBuilder();<br>builder.setName(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>);<br>builder.setScore(<span class=\"hljs-number\">90</span>);<br><span class=\"hljs-keyword\">const</span> zhaoo = builder.build();<br><br><span class=\"hljs-keyword\">const</span> builder = <span class=\"hljs-keyword\">new</span> StudentBuilder();<br>builder.setName(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>);<br>builder.setScore(<span class=\"hljs-number\">59</span>);<br><span class=\"hljs-keyword\">const</span> pp = builder.build();<br><br><span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;挂科人数:&#x27;</span> + failCount);<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"工厂模式-Factory\"><a href=\"#工厂模式-Factory\" class=\"headerlink\" title=\"工厂模式 Factory\"></a>工厂模式 Factory</h3><p>包装并返回对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES5</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Student</span>(<span class=\"hljs-params\">name, subjects</span>) </span>&#123;<br>  <span class=\"hljs-built_in\">this</span>.name = name;<br>  <span class=\"hljs-built_in\">this</span>.subjects = subjects;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">factory</span>(<span class=\"hljs-params\">name, type</span>) </span>&#123;<br>  <span class=\"hljs-keyword\">switch</span> (type) &#123;<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;软件工程&#x27;</span>:<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Student(name, [<span class=\"hljs-string\">&#x27;数据结构&#x27;</span>, <span class=\"hljs-string\">&#x27;设计模式&#x27;</span>, <span class=\"hljs-string\">&#x27;算法设计&#x27;</span>]);<br>      <span class=\"hljs-keyword\">break</span>;<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;城乡规划&#x27;</span>:<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Student(name, [<span class=\"hljs-string\">&#x27;城市道路与交通规划&#x27;</span>, <span class=\"hljs-string\">&#x27;村镇规划设计&#x27;</span>, <span class=\"hljs-string\">&#x27;城市建设史与规划史&#x27;</span>]);<br>      <span class=\"hljs-keyword\">break</span>;<br>    <span class=\"hljs-keyword\">default</span>:<br>      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">&#x27;没这个专业，别瞎填&#x27;</span>;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">var</span> zhaoo = factory(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>, <span class=\"hljs-string\">&#x27;软件工程&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> pp = factory(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>, <span class=\"hljs-string\">&#x27;城乡规划&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES6</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Student</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\">name, subjects</span>)</span> &#123;<br>    <span class=\"hljs-built_in\">this</span>.name = name;<br>    <span class=\"hljs-built_in\">this</span>.subjects = subjects;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">const</span> factory = <span class=\"hljs-function\">(<span class=\"hljs-params\">name, type</span>) =&gt;</span> &#123;<br>  <span class=\"hljs-keyword\">switch</span> (type) &#123;<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;软件工程&#x27;</span>:<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Student(name, [<span class=\"hljs-string\">&#x27;数据结构&#x27;</span>, <span class=\"hljs-string\">&#x27;设计模式&#x27;</span>, <span class=\"hljs-string\">&#x27;算法设计&#x27;</span>]);<br>      <span class=\"hljs-keyword\">break</span>;<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;城乡规划&#x27;</span>:<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Student(name, [<span class=\"hljs-string\">&#x27;城市道路与交通规划&#x27;</span>, <span class=\"hljs-string\">&#x27;村镇规划设计&#x27;</span>, <span class=\"hljs-string\">&#x27;城市建设史与规划史&#x27;</span>]);<br>      <span class=\"hljs-keyword\">break</span>;<br>    <span class=\"hljs-keyword\">default</span>:<br>      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">&#x27;没这个专业，别瞎填&#x27;</span>;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">const</span> zhaoo = factory(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>, <span class=\"hljs-string\">&#x27;软件工程&#x27;</span>);<br><span class=\"hljs-keyword\">const</span> pp = factory(<span class=\"hljs-string\">&#x27;小欣&#x27;</span>, <span class=\"hljs-string\">&#x27;城乡规划&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"抽象工程模式-AbstractFactory\"><a href=\"#抽象工程模式-AbstractFactory\" class=\"headerlink\" title=\"抽象工程模式 AbstractFactory\"></a>抽象工程模式 AbstractFactory</h3><p>工厂外再包一层工厂，用于上产工厂。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Student</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-built_in\">this</span>.intro = <span class=\"hljs-string\">&#x27;我是个学生&#x27;</span>;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Teacher</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-built_in\">this</span>.intro = <span class=\"hljs-string\">&#x27;我是个老师&#x27;</span>;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">StudentFactory</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Student();<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">TeacherFactory</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Teacher();<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Producer</span>(<span class=\"hljs-params\">factory</span>) </span>&#123;<br>  <span class=\"hljs-keyword\">switch</span> (factory) &#123;<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;student&#x27;</span>:<br>      <span class=\"hljs-keyword\">return</span> StudentFactory;<br>      <span class=\"hljs-keyword\">break</span>;<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;teacher&#x27;</span>:<br>      <span class=\"hljs-keyword\">return</span> TeacherFactory;<br>      <span class=\"hljs-keyword\">break</span>;<br>    <span class=\"hljs-keyword\">default</span>:<br>      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">&#x27;没这个工厂&#x27;</span>;<br>      <span class=\"hljs-keyword\">break</span>;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">var</span> sFactory = Producer(<span class=\"hljs-string\">&#x27;student&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> zhaoo = factory(<span class=\"hljs-string\">&#x27;小兆&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> tFactory = Producer(<span class=\"hljs-string\">&#x27;teacher&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> pp = factory(<span class=\"hljs-string\">&#x27;小潘&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"单例模式-Singleton\"><a href=\"#单例模式-Singleton\" class=\"headerlink\" title=\"单例模式 Singleton\"></a>单例模式 Singleton</h3><p>避免重复创建，实例化对象前先判断是已实例化。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES5</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singleton</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>  <span class=\"hljs-keyword\">if</span> (Singleton.instance)<br>    <span class=\"hljs-keyword\">return</span> Singleton.instance;<br>  <span class=\"hljs-keyword\">else</span> &#123;<br>    <span class=\"hljs-built_in\">this</span>.countdown = <span class=\"hljs-number\">60</span>;<br>    Singleton.instance = <span class=\"hljs-built_in\">this</span>;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">var</span> s1 = <span class=\"hljs-keyword\">new</span> Singleton();<br><span class=\"hljs-keyword\">var</span> s2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">new</span> Singleton();<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// ES6</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singleton</span> </span>&#123;<br>  <span class=\"hljs-title\">constructor</span> (<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">if</span> (Singleton.instance)<br>      <span class=\"hljs-keyword\">return</span> Singleton.instance;<br>    <span class=\"hljs-keyword\">else</span> &#123;<br>      <span class=\"hljs-built_in\">this</span>.countdown = <span class=\"hljs-number\">60</span>;<br>      Singleton.instance = <span class=\"hljs-built_in\">this</span>;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">const</span> s1 = <span class=\"hljs-keyword\">new</span> Singleton();<br><span class=\"hljs-keyword\">const</span> s2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">new</span> Singleton();<br></code></pre></td></tr></table></figure>\n\n<p>未完待续……</p>","categories":[{"name":"前端","path":"api/categories/前端.json"}],"tags":[{"name":"前端","path":"api/tags/前端.json"},{"name":"设计模式","path":"api/tags/设计模式.json"}]}